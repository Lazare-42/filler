!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
add_percentage	screen_display.c	/^void	add_percentage(t_mlx mlx, t_filler gs, int x, int y)$/;"	f
board_distance_reset	get_possession.c	/^void	board_distance_reset(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_1	board_distance_update_1.c	/^void	board_distance_update_1(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_2	board_distance_update_1.c	/^void	board_distance_update_2(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_3	board_distance_update_1.c	/^void	board_distance_update_3(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_4	board_distance_update_1.c	/^void	board_distance_update_4(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_5	board_distance_update_2.c	/^void	board_distance_update_5(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_6	board_distance_update_2.c	/^void	board_distance_update_6(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_7	board_distance_update_2.c	/^void	board_distance_update_7(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_8	board_distance_update_2.c	/^void	board_distance_update_8(t_sqrt **board, t_filler gs)$/;"	f
board_img_handler	image_handler.c	/^void	board_img_handler(void)$/;"	f
board_init	board_init.c	/^t_sqrt		**board_init(t_sqrt **board, t_filler *game_settings)$/;"	f
board_malloc	malloced_structures.c	/^t_sqrt	**board_malloc(t_filler game_settings)$/;"	f
board_possession_update	possession_update.c	/^void	board_possession_update(t_sqrt **board, t_filler filler)$/;"	f
board_score_calc	get_possession.c	/^float	board_score_calc(t_sqrt **board, t_filler gs)$/;"	f
board_to_board	get_possession.c	/^void	board_to_board(t_sqrt **src, t_sqrt ***dest, t_filler gs)$/;"	f
board_update	board_update.c	/^void	board_update(t_sqrt **board, t_filler *gs)$/;"	f
display_pieces	screen_display.c	/^void	display_pieces(t_filler gs, t_sqrt **board, int **screen)$/;"	f
find_winner	pass_pieces_or_find_winner.c	/^void	find_winner(t_filler *game_settings, char *buf)$/;"	f
get_game_settings	board_init.c	/^t_filler	get_game_settings(void)$/;"	f
get_total_possession	possession_update.c	/^void	get_total_possession(t_sqrt **board, t_filler *gs)$/;"	f
loop_filler	image_handler.c	/^int		loop_filler(int necessary)$/;"	f
main	main_test.c	/^int	main(void)$/;"	f
mlx_put_winner	image_handler.c	/^void	mlx_put_winner(t_mlx mlx, t_filler gs)$/;"	f
my_mlx_init	image_handler.c	/^t_mlx	my_mlx_init(void)$/;"	f
pass_pieces_or_find_winner	pass_pieces_or_find_winner.c	/^void	pass_pieces_or_find_winner(t_filler *game_settings)$/;"	f
put_player_info	screen_display.c	/^void	put_player_info(t_mlx mlx, t_filler gs, int player)$/;"	f
put_sentence	board_init.c	/^void		put_sentence(t_filler *gs, int player)$/;"	f
score_update	get_possession.c	/^float	score_update(t_sqrt ***board_cpy, float *high_score, t_filler *gs)$/;"	f
screen_fill	screen_display.c	/^void	screen_fill(int **screen, int player, int where_to, t_filler gs)$/;"	f
screen_fill_possession	screen_display.c	/^void	screen_fill_possession(int **screen, t_sqrt tile, int where_to,$/;"	f
set_get_mlx	image_handler.c	/^t_mlx	set_get_mlx(t_mlx *mlx)$/;"	f
set_player_info	board_init.c	/^void		set_player_info(char *buf, t_filler *gs, int player)$/;"	f
tile_init	board_init.c	/^t_sqrt		tile_init(char position)$/;"	f
