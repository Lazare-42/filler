!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
board_cpy_reset	get_possession.c	/^void    board_cpy_reset(t_sqrt **board, t_sqrt ***board_cpy, t_filler game_settings)$/;"	f
board_distance_update_0	get_possession.c	/^void    board_distance_update_0(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_1	get_possession.c	/^void    board_distance_update_1(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_2	get_possession.c	/^void    board_distance_update_2(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_3	get_possession.c	/^void    board_distance_update_3(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_4	get_possession.c	/^void    board_distance_update_4(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_5	get_possession.c	/^void    board_distance_update_5(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_6	get_possession.c	/^void    board_distance_update_6(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_7	get_possession.c	/^void    board_distance_update_7(t_sqrt **board, t_filler gs)$/;"	f
board_distance_update_8	get_possession.c	/^void    board_distance_update_8(t_sqrt **board, t_filler gs)$/;"	f
board_init	board_init.c	/^t_sqrt **board_init(t_sqrt **board, t_filler game_settings)$/;"	f
board_malloc	malloced_structures.c	/^t_sqrt	**board_malloc(t_filler game_settings)$/;"	f
board_possession_update	get_possession.c	/^void    board_possession_update(t_sqrt **board, t_filler gs)$/;"	f
board_print	get_possession.c	/^void    board_print(t_sqrt **board, t_filler gs)$/;"	f
board_random	board_init.c	/^t_sqrt	**board_random(t_filler game_settings, int nb)$/;"	f
board_score_calc	get_possession.c	/^float   board_score_calc(t_sqrt **board, t_filler gs)$/;"	f
board_update	get_possession.c	/^void    board_update(t_sqrt **board, t_filler gs)$/;"	f
boundary_draw	get_possession.c	/^void		boundary_draw(t_sqrt **board, t_filler filler)$/;"	f
boundary_draw_new	get_possession.c	/^void		boundary_draw_new(t_sqrt **board, t_filler f)$/;"	f
boundary_draw_old	get_possession.c	/^void		boundary_draw_old(t_sqrt **board, t_filler filler)$/;"	f
calc_score	calc_score.c	/^float	calc_score(t_sqrt **board, t_filler f)$/;"	f
check_empty_column	get_piece.c	/^int	check_empty_column(t_piece piece)$/;"	f
check_empty_line	get_piece.c	/^int check_empty_line(t_piece piece)$/;"	f
distance_update_from_point	get_possession.c	/^void	distance_update_from_point(t_sqrt **board, t_point o, t_filler filler, int player_side)$/;"	f
ft_filler_abs	get_possession.c	/^static int		ft_filler_abs(int x)$/;"	f	file:
get_best_position	get_possession.c	/^t_point get_best_position(t_sqrt **board, t_sqrt ***board_cpy, t_piece pc, t_filler gs)$/;"	f
get_game_settings	board_init.c	/^t_filler	get_game_settings()$/;"	f
get_piece	malloced_structures.c	/^t_piece	get_piece(t_piece piece)$/;"	f
get_possession	get_possession.c	/^static float	get_possession(t_sqrt **board, t_point o, t_filler filler)$/;"	f	file:
is_placeable	get_possession.c	/^int     is_placeable(t_sqrt **board, t_piece pc, t_point o, t_filler gs)$/;"	f
layout_init	MY_maintest.c	/^static int **layout_init(char layout[3][3])$/;"	f	file:
main	MY_maintest.c	/^int	main(void)$/;"	f
main	main_test.c	/^int	main(void)$/;"	f
norm_piece	get_piece.c	/^t_piece norm_piece(t_piece piece)$/;"	f
piece_write	get_possession.c	/^void     piece_write(t_sqrt ***board_cpy, t_piece pc, t_point o)$/;"	f
position_init	get_possession.c	/^static void		position_init(t_point *position, int x, int y)$/;"	f	file:
position_update	get_possession.c	/^static void		position_update(t_point *position, t_direction direction)$/;"	f	file:
possession_update	get_possession.c	/^void	possession_update(t_sqrt **board, t_filler filler)$/;"	f
possession_update_from_point	get_possession.c	/^void	possession_update_from_point(t_sqrt **board, t_point o, t_filler filler, int player_side)$/;"	f
print_board	print.c	/^void	print_board(int x_max, int y_max, t_sqrt **board)$/;"	f
print_board_old	print.c	/^void	print_board_old(int x_max, int y_max, t_sqrt **board)$/;"	f
print_piece	get_piece.c	/^void	print_piece(t_piece piece)$/;"	f
score_update	get_possession.c	/^float   score_update(t_sqrt ***board_cpy, float *high_score, t_filler game_settings)$/;"	f
swap_columns	get_piece.c	/^void	swap_columns(t_piece piece, int free_columns)$/;"	f
swap_lines	get_piece.c	/^void	swap_lines(t_piece piece, int free_lines)$/;"	f
